// src/scripts/dailyProofCron.ts
import cron from "node-cron";
import { exec } from "child_process";

function log(msg: string) {
  const time = new Date().toLocaleString("pt-BR", { timeZone: "America/Sao_Paulo" });
  console.log(`[${time}] ${msg}`);
}

log("‚è∞ Agendador cont√°bil di√°rio iniciado...");

// Executa diariamente √†s 23:59 (hor√°rio de Bras√≠lia)
cron.schedule("59 23 * * *", () => {
  log("üèÅ Iniciando rotina autom√°tica: Proof of Settlement + Conciliation Engine...");

  // 1Ô∏è‚É£ Executa Proof of Settlement
  exec("npx ts-node src/scripts/proof-of-settlement.ts", (error, stdout, stderr) => {
    if (error) {
      log(`‚ùå Erro no Proof of Settlement: ${error.message}`);
      return;
    }
    if (stderr) log(`‚ö†Ô∏è Aviso Proof: ${stderr}`);
    log(stdout);

    // 2Ô∏è‚É£ Depois que o proof terminar, executa a concilia√ß√£o T+1
    log("üßÆ Executando Conciliation Engine (T+1)...");
    exec("npx ts-node src/scripts/conciliation-engine.ts", (err2, out2, errMsg2) => {
      if (err2) {
        log(`‚ùå Erro na concilia√ß√£o: ${err2.message}`);
        return;
      }
      if (errMsg2) log(`‚ö†Ô∏è Aviso concilia√ß√£o: ${errMsg2}`);
      log(out2);
      log("‚úÖ Rotina cont√°bil di√°ria conclu√≠da com sucesso!");
    });
  });
});
